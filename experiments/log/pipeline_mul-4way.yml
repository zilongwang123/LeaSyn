srcObservations: 
    - {id: "ADD", cond: "(op == 8'h01)", attrs: []} # disclose whenever we are executing an ADD
    - {id: "MUL", cond: "(op == 8'h02)", attrs: [ {value: "imm", width: 24} ] } # disclose MUL operand whenever we are executing a MUL
   
   
   ### STATE INVARIANT
   stateInvariant:
     - {id: "PCINV", cond: "1", attrs: [{value: "nxpc == pc+1", width: 1}]}
     - {id: "NXPCINV", cond: "1", attrs: [{value: "nxpc2 == nxpc+1", width: 1}]}
     - {id: "EXOPINV", cond: "1", attrs: [{value: "( ! decoded ) || ( ex_op == instr_r[7:0] )", width: 1}]}
     - {id: "EXIMMINV", cond: "1", attrs: [{value: "( ! decoded ) || ( ex_imm == instr_r[31:8] )", width: 1}]}
   
    
   ### INVARIANT
   invariant: 
    - {id: "MUL_EXECUTE", cond: "ex_op == 8'h02", attrs: [{value: "ex_imm", width: 24}]}


	Checking the relation between target and invariant...
	The invariant for checking is:
	- { id: MUL_EXECUTE, cond: ex_op == 8'h02, attrs: [ { value: ex_imm, width: 24 } ]}
	- { id: pc, cond: 1, attrs: [ { value: pc, width: 32 } ]}
	- { id: nxpc, cond: 1, attrs: [ { value: nxpc, width: 32 } ]}
	- { id: nxpc2, cond: 1, attrs: [ { value: nxpc2, width: 32 } ]}
	- { id: retire, cond: 1, attrs: [ { value: retire, width: 1 } ]}
	- { id: mult, cond: 1, attrs: [ { value: mult, width: 1 } ]}
	- { id: mul_imm, cond: 1, attrs: [ { value: mul_imm, width: 24 } ]}
	- { id: wb_we, cond: 1, attrs: [ { value: wb_we, width: 1 } ]}
	- { id: decoded, cond: 1, attrs: [ { value: decoded, width: 1 } ]}

	Time for base step: 1.5301787853240967
	Time for induction step: 12.697089672088623
	Time for generating invariant: 14.22726845741272
	Time for checking: 0.6923704147338867
The leakage ordering check is satisfied

The contract checked is satisfied